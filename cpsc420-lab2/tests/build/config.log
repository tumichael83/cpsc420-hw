This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by PARC Assembly Test Programs configure ?, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ ../configure --host=maven host_alias=maven --no-create --no-recursion

## --------- ##
## Platform. ##
## --------- ##

hostname = giraffe.zoo.cs.yale.edu
uname -m = x86_64
uname -r = 6.1.5-200.fc37.x86_64
uname -s = Linux
uname -v = #1 SMP PREEMPT_DYNAMIC Thu Jan 12 15:52:00 UTC 2023

/usr/bin/uname -p = x86_64
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/bin/
PATH: /home/accts/mst45/cs420/cpsc420-hw/cpsc420-lab2/toolchain/local/bin/
PATH: /home/accts/mst45/cs420/cpsc420-hw/cpsc420-lab2/toolchain/local/encap/maven-sys-xcc/bin/
PATH: /home/accts/mst45/.local/bin/
PATH: /home/accts/mst45/bin/
PATH: /usr/lib64/qt-3.3/bin/
PATH: /usr/condabin/
PATH: /usr/lib64/ccache/
PATH: /usr/local/bin/
PATH: /usr/bin/
PATH: /usr/local/sbin/
PATH: /usr/sbin/
PATH: /var/lib/snapd/snap/bin/


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2071: looking for aux files: install-sh config.guess config.sub
configure:2084:  trying ../scripts/
configure:2098:   ../scripts/install.sh found
configure:2113:   ../scripts/config.guess found
configure:2113:   ../scripts/config.sub found
configure:2233: checking build system type
configure:2248: result: x86_64-unknown-linux-gnu
configure:2268: checking host system type
configure:2282: result: mipsmavenel-ucb-elf
configure:2325: checking for maven-gcc
configure:2346: found /home/accts/mst45/cs420/cpsc420-hw/cpsc420-lab2/toolchain/local/encap/maven-sys-xcc/bin/maven-gcc
configure:2357: result: maven-gcc
configure:2755: checking for C compiler version
configure:2764: maven-gcc --version >&5
maven-gcc (GCC) 4.4.1
Copyright (C) 2009 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:2775: $? = 0
configure:2764: maven-gcc -v >&5
Using built-in specs.
Target: maven
Configured with: ../../src/configure --disable-option-checking --prefix=/home/ee475/local/encap/maven-sys-xcc --disable-werror --disable-nls --disable-libgomp --disable-libssp --disable-multilib --with-newlib --enable-languages=c,c++ --target=maven --enable-stow --cache-file=/dev/null --srcdir=../../src : (reconfigured) ../../src/configure --disable-option-checking --prefix=/home/ee475/local/encap/maven-sys-xcc --disable-werror --disable-nls --disable-libgomp --disable-libssp --disable-multilib --with-newlib --enable-languages=c,c++ --target=maven --cache-file=/dev/null --srcdir=../../src
Thread model: bthread
gcc version 4.4.1 (GCC) 
configure:2775: $? = 0
configure:2764: maven-gcc -V >&5
maven-gcc: '-V' option must have argument
configure:2775: $? = 1
configure:2764: maven-gcc -qversion >&5
maven-gcc: unrecognized option '-qversion'
maven-gcc: no input files
configure:2775: $? = 1
configure:2764: maven-gcc -version >&5
maven-gcc: unrecognized option '-version'
maven-gcc: no input files
configure:2775: $? = 1
configure:2795: checking whether the C compiler works
configure:2817: maven-gcc    conftest.c  >&5
configure:2821: $? = 0
configure:2871: result: yes
configure:2874: checking for C compiler default output file name
configure:2876: result: a.out
configure:2882: checking for suffix of executables
configure:2889: maven-gcc -o conftest    conftest.c  >&5
configure:2893: $? = 0
configure:2916: result: 
configure:2938: checking whether we are cross compiling
configure:2946: maven-gcc -o conftest    conftest.c  >&5
configure:2950: $? = 0
configure:2957: ./conftest
../configure: line 2959: ./conftest: cannot execute binary file: Exec format error
configure:2961: $? = 126
configure:2976: result: yes
configure:2981: checking for suffix of object files
configure:3004: maven-gcc -c   conftest.c >&5
configure:3008: $? = 0
configure:3030: result: o
configure:3034: checking whether the compiler supports GNU C
configure:3054: maven-gcc -c   conftest.c >&5
configure:3054: $? = 0
configure:3064: result: yes
configure:3075: checking whether maven-gcc accepts -g
configure:3096: maven-gcc -c -g  conftest.c >&5
configure:3096: $? = 0
configure:3140: result: yes
configure:3160: checking for maven-gcc option to enable C11 features
configure:3175: maven-gcc  -c -g -O2  conftest.c >&5
conftest.c:61:3: error: #error "Compiler does not advertise C99 conformance"
conftest.c:116: error: expected ';', ',' or ')' before 'text'
conftest.c:165:3: error: #error "Compiler does not advertise C11 conformance"
conftest.c: In function '_Alignas':
conftest.c:169: error: expected declaration specifiers before 'aligned_as_double'
conftest.c:170: error: expected declaration specifiers or '...' before numeric constant
conftest.c:170: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'no_special_alignment'
conftest.c:171: error: storage class specified for parameter 'aligned_as_int'
conftest.c:172: error: expected declaration specifiers or '...' before numeric constant
conftest.c:172: error: expected '=', ',', ';', 'asm' or '__attribute__' before '_Alignas'
conftest.c:177: error: expected expression before 'int'
conftest.c:177: error: enumerator value for 'int_alignment' is not an integer constant
conftest.c:178: error: expected expression before 'int'
conftest.c:178: error: enumerator value for 'int_array_alignment' is not an integer constant
conftest.c:179: error: expected expression before 'char'
conftest.c:180: error: enumerator value for 'char_alignment' is not an integer constant
conftest.c:175: warning: empty declaration
conftest.c:181: error: expected declaration specifiers before '_Static_assert'
conftest.c:184: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'does_not_return'
conftest.c:190: error: expected specifier-qualifier-list before '_Static_assert'
conftest.c:187: warning: empty declaration
conftest.c:197: error: parameter 'utf8_literal' is initialized
conftest.c:197: error: 'syntax' undeclared (first use in this function)
conftest.c:197: error: (Each undeclared identifier is reported only once
conftest.c:197: error: for each function it appears in.)
conftest.c:197: error: expected ',' or ';' before 'error'
conftest.c:200: error: storage class specified for parameter 'long_ptr'
conftest.c:201: error: storage class specified for parameter 'long_ptr'
conftest.c:201: error: redefinition of parameter 'long_ptr'
conftest.c:200: note: previous definition of 'long_ptr' was here
conftest.c:202: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'long_ptr'
conftest.c:217: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
conftest.c:169: error: old-style parameter declarations in prototyped function definition
conftest.c:169: error: parameter name omitted
conftest.c:269: error: expected '{' at end of input
configure:3175: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "PARC Assembly Test Programs"
| #define PACKAGE_TARNAME "parc-test"
| #define PACKAGE_VERSION "?"
| #define PACKAGE_STRING "PARC Assembly Test Programs ?"
| #define PACKAGE_BUGREPORT "Ji Kim"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| // Does the compiler advertise C99 conformance?
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| // Does the compiler advertise C11 conformance?
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L
| # error "Compiler does not advertise C11 conformance"
| #endif
| 
| // Check _Alignas.
| char _Alignas (double) aligned_as_double;
| char _Alignas (0) no_special_alignment;
| extern char aligned_as_int;
| char _Alignas (0) _Alignas (int) aligned_as_int;
| 
| // Check _Alignof.
| enum
| {
|   int_alignment = _Alignof (int),
|   int_array_alignment = _Alignof (int[100]),
|   char_alignment = _Alignof (char)
| };
| _Static_assert (0 < -_Alignof (int), "_Alignof is signed");
| 
| // Check _Noreturn.
| int _Noreturn does_not_return (void) { for (;;) continue; }
| 
| // Check _Static_assert.
| struct test_static_assert
| {
|   int x;
|   _Static_assert (sizeof (int) <= sizeof (long int),
|                   "_Static_assert does not work in struct");
|   long int y;
| };
| 
| // Check UTF-8 literals.
| #define u8 syntax error!
| char const utf8_literal[] = u8"happens to be ASCII" "another string";
| 
| // Check duplicate typedefs.
| typedef long *long_ptr;
| typedef long int *long_ptr;
| typedef long_ptr long_ptr;
| 
| // Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.
| struct anonymous
| {
|   union {
|     struct { int i; int j; };
|     struct { int k; long int l; } w;
|   };
|   int m;
| } v1;
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   
|   _Static_assert ((offsetof (struct anonymous, i)
| 		   == offsetof (struct anonymous, w.k)),
| 		  "Anonymous union alignment botch");
|   v1.i = 2;
|   v1.w.k = 5;
|   ok |= v1.i != 5;
| 
|   return ok;
| }
| 
configure:3175: maven-gcc -std=gnu11 -c -g -O2  conftest.c >&5
cc1: error: unrecognized command line option "-std=gnu11"
configure:3175: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "PARC Assembly Test Programs"
| #define PACKAGE_TARNAME "parc-test"
| #define PACKAGE_VERSION "?"
| #define PACKAGE_STRING "PARC Assembly Test Programs ?"
| #define PACKAGE_BUGREPORT "Ji Kim"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| // Does the compiler advertise C99 conformance?
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| // Does the compiler advertise C11 conformance?
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L
| # error "Compiler does not advertise C11 conformance"
| #endif
| 
| // Check _Alignas.
| char _Alignas (double) aligned_as_double;
| char _Alignas (0) no_special_alignment;
| extern char aligned_as_int;
| char _Alignas (0) _Alignas (int) aligned_as_int;
| 
| // Check _Alignof.
| enum
| {
|   int_alignment = _Alignof (int),
|   int_array_alignment = _Alignof (int[100]),
|   char_alignment = _Alignof (char)
| };
| _Static_assert (0 < -_Alignof (int), "_Alignof is signed");
| 
| // Check _Noreturn.
| int _Noreturn does_not_return (void) { for (;;) continue; }
| 
| // Check _Static_assert.
| struct test_static_assert
| {
|   int x;
|   _Static_assert (sizeof (int) <= sizeof (long int),
|                   "_Static_assert does not work in struct");
|   long int y;
| };
| 
| // Check UTF-8 literals.
| #define u8 syntax error!
| char const utf8_literal[] = u8"happens to be ASCII" "another string";
| 
| // Check duplicate typedefs.
| typedef long *long_ptr;
| typedef long int *long_ptr;
| typedef long_ptr long_ptr;
| 
| // Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.
| struct anonymous
| {
|   union {
|     struct { int i; int j; };
|     struct { int k; long int l; } w;
|   };
|   int m;
| } v1;
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   
|   _Static_assert ((offsetof (struct anonymous, i)
| 		   == offsetof (struct anonymous, w.k)),
| 		  "Anonymous union alignment botch");
|   v1.i = 2;
|   v1.w.k = 5;
|   ok |= v1.i != 5;
| 
|   return ok;
| }
| 
configure:3188: result: unsupported
configure:3206: checking for maven-gcc option to enable C99 features
configure:3221: maven-gcc  -c -g -O2  conftest.c >&5
conftest.c:61:3: error: #error "Compiler does not advertise C99 conformance"
conftest.c:116: error: expected ';', ',' or ')' before 'text'
conftest.c: In function 'main':
conftest.c:178: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'newvar'
conftest.c:178: error: 'newvar' undeclared (first use in this function)
conftest.c:178: error: (Each undeclared identifier is reported only once
conftest.c:178: error: for each function it appears in.)
conftest.c:188: error: 'for' loop initial declarations are only allowed in C99 mode
conftest.c:188: note: use option -std=c99 or -std=gnu99 to compile your code
configure:3221: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "PARC Assembly Test Programs"
| #define PACKAGE_TARNAME "parc-test"
| #define PACKAGE_VERSION "?"
| #define PACKAGE_STRING "PARC Assembly Test Programs ?"
| #define PACKAGE_BUGREPORT "Ji Kim"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| // Does the compiler advertise C99 conformance?
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:3221: maven-gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:3221: $? = 0
configure:3242: result: -std=gnu99
configure:3333: checking for a BSD-compatible install
configure:3406: result: /usr/bin/install -c
configure:3558: checking for maven-isa-testrun
configure:3579: found /home/accts/mst45/cs420/cpsc420-hw/cpsc420-lab2/toolchain/local/bin/maven-isa-testrun
configure:3590: result: maven-isa-testrun
configure:3848: creating ./config.status

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-unknown-linux-gnu
ac_cv_c_compiler_gnu=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_STOW_PREFIX_set=
ac_cv_env_STOW_PREFIX_value=
ac_cv_env_STOW_ROOT_set=
ac_cv_env_STOW_ROOT_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=maven
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_host=mipsmavenel-ucb-elf
ac_cv_objext=o
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_CC=maven-gcc
ac_cv_prog_RUN=maven-isa-testrun
ac_cv_prog_cc_c11=no
ac_cv_prog_cc_c99=-std=gnu99
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=-std=gnu99

## ----------------- ##
## Output variables. ##
## ----------------- ##

CC='maven-gcc -std=gnu99'
CFLAGS='-Wall'
CPPFLAGS=''
DEFS='-DPACKAGE_NAME=\"PARC\ Assembly\ Test\ Programs\" -DPACKAGE_TARNAME=\"parc-test\" -DPACKAGE_VERSION=\"\?\" -DPACKAGE_STRING=\"PARC\ Assembly\ Test\ Programs\ \?\" -DPACKAGE_BUGREPORT=\"Ji\ Kim\" -DPACKAGE_URL=\"\"'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EXEEXT=''
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LDFLAGS=''
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
OBJEXT='o'
PACKAGE_BUGREPORT='Ji Kim'
PACKAGE_NAME='PARC Assembly Test Programs'
PACKAGE_STRING='PARC Assembly Test Programs ?'
PACKAGE_TARNAME='parc-test'
PACKAGE_URL=''
PACKAGE_VERSION='?'
PATH_SEPARATOR=':'
RUN='maven-isa-testrun'
RUNFLAGS=''
SHELL='/bin/sh'
STOW_PREFIX=''
STOW_ROOT=''
ac_ct_CC=''
ac_ct_RUN=''
bindir='${exec_prefix}/bin'
build='x86_64-unknown-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='unknown'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
enable_stow='no'
exec_prefix='${prefix}'
host='mipsmavenel-ucb-elf'
host_alias='maven'
host_cpu='mipsmavenel'
host_os='elf'
host_vendor='ucb'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
stow=''
sysconfdir='${prefix}/etc'
target_alias=''
tmod_include='parcv1 parcv2 '

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "PARC Assembly Test Programs"
#define PACKAGE_TARNAME "parc-test"
#define PACKAGE_VERSION "?"
#define PACKAGE_STRING "PARC Assembly Test Programs ?"
#define PACKAGE_BUGREPORT "Ji Kim"
#define PACKAGE_URL ""

configure: exit 0

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by PARC Assembly Test Programs config.status ?, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on giraffe.zoo.cs.yale.edu

config.status:733: creating Makefile
